@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p role="status">Weather in @place at @time</p>

<form method="post">
    <input asp-for="" /><br />
</form>

@if (forecast == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @* @foreach (var forecast in forecasts)
        {
        <tr>
        <td>@forecast.Date.ToShortDateString()</td>
        <td>@forecast.TemperatureC</td>
        <td>@forecast.TemperatureF</td>
        <td>@forecast.Summary</td>
        </tr>
        } *@

            <tr>
                <td>@forecast.main.temp</td>
                <td>@forecast.main.humidity</td>
                <td>@forecast.wind.speed</td>
                <td>@forecast.weather[0].main</td>
            </tr>

        </tbody>
    </table>
}

@code {
    private String place = "";
    private String time = "";

    private dynamic forecast;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            String json = await
            Http.GetStringAsync("https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=10.99&appid=2a8e7fe22bd0a89cb179c6490986ff59");
            Console.WriteLine(json);
            forecast = Newtonsoft.Json.JsonConvert.DeserializeObject<dynamic>(json);
            var t1 = forecast.main.temp;
            Console.WriteLine(t1);
            var t2 = forecast.main.humidity;
            Console.WriteLine(t1);
            var t3 = forecast.wind.speed;
            Console.WriteLine(t1);
            var t4 = forecast.weather[0].main;
            Console.WriteLine(t1);
            @* forecast = await
Http.GetFromJsonAsync<TempForecast>("https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=10.99&appid=2a8e7fe22bd0a89cb179c6490986ff59");
*@
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
}